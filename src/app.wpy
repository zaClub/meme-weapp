<style lang="scss">
  @import './assets/style/_variables.scss';
  
  page {
    height: 100%;
    background: $bg;
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { LOGIN, UPLOAD } from './constant/api'
import zajax from './util/zajax'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/search',
      'pages/tag',
      'pages/upload',
      'pages/about'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#313539',
      navigationBarTitleText: 'Meme',
      navigationBarTextStyle: 'white',
      backgroundColor: '#ebebeb',
    },
    tabBar: {
      color: '#868686',
      selectedColor: '#313539',
      borderStyle: 'black',
      position: 'bottom',
      list: [
        { pagePath: 'pages/index', text: 'Meme' },
        { pagePath: 'pages/upload', text: '上传' },
        { pagePath: 'pages/about', text: '关于' },
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    // this.use('requestfix')
  }

  onLaunch() {
    // this.testAsync()

    // this.login()
    // this.testUpload()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }

  testUpload() {
    wx.chooseImage({
      count: 1, // 默认9
      sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
      success: function (res) {
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        var data = {
          path: res.tempFilePaths[0]
        }

        zajax
          .upload(UPLOAD, data)
          .then(console.log)
      }
    })

  }

  async login() {
    
    let code = await this.wxLogin()

    let userInfo = await this.wxGetUserInfo()

    // console.log(code, userInfo)

    zajax
      .post(LOGIN, {
          code,
          userInfo
        })
      .then(res => {
        console.log(res)
      })
      .catch(e => {
        console.log('fuck')
        console.error(e)
      })
  }

  // 封装微信的 login 方法，返回 js_code
  wxLogin() {
    return new Promise((resolve, reject) => {
      wx.login({
        success: res => {
          if (res.code) {
            resolve(res.code)
          } else {
            reject(res.errMsg)
          }
        },
        fail: _ => reject(_) // 接口文档没说回调函数参数是啥
      })
    })
    .then(res => {
      return res
    })
    .catch(errMsg => {
      console.log('登录失败！' + errMsg || '')
    })
  }

  // 封装微信的 getUserInfo 方法，返回 userInfo
  wxGetUserInfo() {
    return new Promise((resolve, reject) => {
      wx.getUserInfo({
        success: res => resolve(res),
        fail: err => reject(err) // 接口文档没说回调函数参数是啥
      })
    })
    .then(res => {
      return res
    })
    .catch(err => {
      console.log('获取用户信息失败！' + err || '')
    })
  }
}
</script>
