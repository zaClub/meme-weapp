<style lang="scss">
  @import '../assets/style/_variables.scss';

  ::-webkit-scrollbar {
    width: 0;
    height: 0;
    color: transparent;
  }

  @keyframes fadeIn {
    0% { opacity: 0; }
    50% { opacity: 0.2; }
    100% { opacity: 1; }
  }

  .photo {
    box-sizing: border-box;
    position: relative;

    &__content {
      box-sizing: border-box;
      width: 100%;
      height: 100%;
    }

    &__col {
      width: 50%;
      height: 100%;
      margin-top: 30rpx;
      margin-bottom: 30rpx;
      display: inline-block;
      box-sizing: border-box;
      vertical-align: top;
    }

    &__item {
      width: 100%;
      box-sizing: border-box;
      margin-bottom: 30rpx;
      animation: fadeIn 1s linear;
    }

    &__img {
      width: 100%;
      border-top-left-radius: 6rpx;
      border-top-right-radius: 6rpx;
      display: block;
    }

    &__img--loaded {
      width: 100%;
      border-top-left-radius: 6rpx;
      border-top-right-radius: 6rpx;
      display: block;
    }

    &__tag {
      box-sizing: border-box;
      background: $white;
      padding-left: 20rpx;
      padding-right: 20rpx;
      border-bottom: 1rpx solid transparent;
      border-left: 1rpx solid transparent;
      border-right: 1rpx solid transparent;
      border-bottom-left-radius: 6rpx;
      border-bottom-right-radius: 6rpx;
      font-size: 30rpx;
      color: $font;
    }
  }
</style>

<template>
  <view class="photo" style="height: {{scrollHeight}}px">
    <scroll-view class="photo__content" scroll-y="true" lower-threshold="100" 
      style="padding-left: {{contentPdLeft}}rpx;padding-right: {{contentPdRight}}rpx;"
      bindscrolltolower="onScrollToLower">
      <view class="photo__col" style="padding-right: {{colPdRight}}rpx">
        <view class="photo__item" wx:for-items="{{leftPhotos}}" wx:for-item="photo" wx:key="id">
          <image wx:if="{{photo.loaded}}" mode="widthFix" class="photo__img" src="{{photo.normal}}" style="height: {{photo.adaptHeight}}rpx"/>
          <view wx:if="{{photo.loaded}}" class="photo__tag" style="height: {{tagHeight}}rpx;line-height:{{tagHeight}}rpx">权律二、宋民国</view>
        </view>
      </view>
      <view class="photo__col" style="padding-left: {{colPdLeft}}rpx">
        <view class="photo__item" wx:for-items="{{rightPhotos}}" wx:for-item="photo" wx:key="id">
          <image wx:if="{{photo.loaded}}" mode="widthFix" class="photo__img" src="{{photo.normal}}" style="height: {{photo.adaptHeight}}rpx"/>
          <view wx:if="{{photo.loaded}}" class="photo__tag" style="height: {{tagHeight}}rpx;line-height:{{tagHeight}}rpx">权律二、宋民国</view>
        </view>
      </view>
    </scroll-view>
  </view>
  <imgload/>
</template>

<script>
  import wepy from 'wepy'
  import Toast from 'wepy-com-toast'
  import ImgLoad from './img-load'

  export default class PhotoWall extends wepy.component {

    onLoad() {
      //获取窗口信息并设置尺寸信息
      wx.getSystemInfo({
        success: resp => {
          //计算滚动视图的高度，相当于 100vh - 100rpx
          this.scrollHeight = resp.windowHeight - (resp.windowWidth / 750) * 100

          //设置内边距 rpx
          this.contentPdLeft = 20
          this.contentPdRight = 20
          this.colPdLeft = 10
          this.colPdRight = 10

          //计算图片自适应宽度 rpx
          this.adaptWidth = ( 750 - (
            this.contentPdLeft
            + this.contentPdRight
            + this.colPdLeft
            + this.colPdRight) ) / 2

          //设置图片下标签的高度 rpx
          this.tagHeight = 80

          this.$apply()
        }
      })

      this.images = this.getImages()
      console.log(JSON.stringify(this.images))
      //初始状态先获取一次
      setTimeout(() => {
        this.$invoke('imgload','load',this.images.map(el => ({ src: el.normal })))
      }, 0);
    }

    getImages() {
      return this.photos.slice(0, 10)
    }

    components = {
      imgload: ImgLoad
    }

    data = {
      photos: [
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-01.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/01.jpg', loaded: false, width: 394, height: 392 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-02.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/02.jpg', loaded: false, width: 1440, height: 1080 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-04.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/04.jpg', loaded: false, width: 564, height: 564 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-05.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/05.jpg', loaded: false, width: 894, height: 894 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-06.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/06.jpg', loaded: false, width: 1200, height: 800 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-07.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/07.jpg', loaded: false, width: 1080, height: 1080 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-08.png', normal: 'http://os5w1n6kc.bkt.clouddn.com/08.png', loaded: false, width: 537, height: 453 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-09.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/09.jpg', loaded: false, width: 1000, height: 667 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-10.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/10.jpg', loaded: false, width: 1280, height: 959 },
        { mini: 'http://os5w1n6kc.bkt.clouddn.com/mini-11.jpg', normal: 'http://os5w1n6kc.bkt.clouddn.com/11.jpg', loaded: false, width: 800, height: 533 },
      ],
      images: [],       //临时数组，存储每次获取的图片
      leftPhotos: [],
      rightPhotos: [],

      contentPdLeft: 0,   //照片墙的左内边距 rpx
      contentPdRight: 0,    //照片墙的右内边距 rpx
      colPdLeft: 0,   //列的左内边距 rpx
      colPdRight: 0,    //列的右内边距 rpx
      col1H: 0,   //左列高度 rpx
      col2H: 0,    //右列高度 rpx
      scrollHeight: 0,    //滚动视图的高度 px
      adaptWidth: 0,    //图片自适应宽度 rpx
      tagHeight: 0,   //图片下标签的高度 rpx
    }

    events = {
      //处理加载完成的图片
      onLoaded: (msg, src) => {
        switch (msg) {
          case 'success':

            let list = this.images
            let index = list.findIndex(el => el.normal === src)
            let adaptHeight = this.adaptWidth * (list[index].height / list[index].width)
            list[index].adaptHeight = adaptHeight
            list[index].loaded = true

            if (this.col1H <= this.col2H) {
              this.col1H += list[index].adaptHeight + this.tagHeight
              this.leftPhotos.push(list[index])
            } else {
              this.col2H += list[index].adaptHeight + this.tagHeight
              this.rightPhotos.push(list[index])
            }

            this.$apply()
            break;
          case 'fail':
            console.log(msg)
            this.$apply()
            break;
        }
      },
    }
    
    methods = {
      //处理 scroll 到底事件
      onScrollToLower: event => {
        this.images = this.getImages()
        this.$apply()
        this.$invoke('imgload','load',this.images.map(el => ({ src: el.normal })))
      }
    }

    props = {
      query: {
        type: String,
        default: '',
      }
    }
  }
</script>

